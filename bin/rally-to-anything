import click
import toml
import tqdm

import src.rally
import src.jira


@click.group()
def cli():
    pass


@cli.command()
@click.option("-v", "--verbose", default=False, is_flag=True)
@click.option("-c", "--clear-cache", default=False, is_flag=True)
@click.option("-a", "--attachments", default=False, is_flag=True)
@click.option("--config", type=click.File(), required=True, default="./config.toml")
def dump_rally(verbose, clear_cache, attachments, config):
    config = toml.load(config)
    click.echo("Dumping from Rally...")
    rally = src.rally.Rally(config, verbose)
    if verbose and clear_cache:
        click.echo("Clearing local Rally artifact cache...")

    for artifact in tqdm.tqdm(rally.artifacts, desc="Artifacts"):
        artifact.cache_to_disk(download_attachments=attachments, force=clear_cache)


@cli.command()
@click.option("-v", "--verbose", default=False, is_flag=True)
@click.option("-s", "--skip-upload", default=False, is_flag=True)
@click.option("-o", "--object-id", multiple=True)
@click.option("--config", type=click.File(), required=True, default="./config.toml")
def generate_jira_import_json(verbose, skip_upload, object_id, config):
    config = toml.load(config)
    click.echo("Generating Rally To Jira JSON...")
    migrator = src.jira.JiraMigrator(config, verbose, object_ids=object_id)
    migrator.build_import_json(skip_upload)
    click.echo(
        f"{config['jira']['json']['filepath']} generation complete. Upload to the JSON Importer of your Jira instance."
        " More info on how to do so here: "
        "https://confluence.atlassian.com/adminjiraserver/importing-data-from-json-938847609.html"
    )


if __name__ == "__main__":
    cli()
